{"ast":null,"code":"import { createStore, action, thunk, computed } from \"easy-peasy\";\nimport api from './api/posts';\nexport default createStore({\n  posts: [],\n  setPosts: action((state, payload) => {\n    state.posts = payload;\n  }),\n  postTitle: [],\n  setPostTitle: action((state, payload) => {\n    state.postTitle = payload;\n  }),\n  postBody: [],\n  setPostBody: action((state, payload) => {\n    state.postBody = payload;\n  }),\n  editBody: [],\n  setEditBody: action((state, payload) => {\n    state.editBody = payload;\n  }),\n  search: '',\n  setSearch: action((state, payload) => {\n    state.search = payload;\n  }),\n  searchResults: [],\n  setSearchResults: action((state, payload) => {\n    state.searchResults = payload;\n  }),\n  postCount: computed(state => state.posts.length),\n  getPostId: computed(state => {\n    return id => state.posts.find(post => post.id.toString() === id);\n  }),\n  savePost: thunk(async (action, newPost, helper) => {\n    const {\n      posts\n    } = helper.getState();\n    try {\n      const response = await api.post(`/posts/`, newPost);\n      action.setPosts([...posts, response.data]);\n      action.setPostTitle(\"\");\n      action.setPostBody(\"\");\n    } catch (err) {\n      console.log(`Error:${err.message}`);\n    }\n  }),\n  deletePost: thunk(async (action, id, helper) => {\n    const {\n      posts\n    } = helper.getState();\n    try {\n      await api.delete(`/posts/${id}`);\n      const postsList = posts.filter(post => post.id !== id);\n      action.setPosts(postsList);\n    } catch (err) {\n      console.log(`Error:${err.message}`);\n    }\n  }),\n  editPost: thunk(async (action, updatePost, helper) => {\n    const {\n      posts\n    } = helper.getState;\n    const {\n      id\n    } = updatePost;\n    try {\n      const response = await api.put(`/posts/${id}`, updatePost);\n      action.setPosts(posts.map(post => post.id === id ? {\n        ...response.data\n      } : post));\n      action.setEditTitle('');\n      action.setEditBody('');\n    } catch (err) {\n      console.log(`Error:${err.message}`);\n    }\n  })\n});","map":{"version":3,"names":["createStore","action","thunk","computed","api","posts","setPosts","state","payload","postTitle","setPostTitle","postBody","setPostBody","editBody","setEditBody","search","setSearch","searchResults","setSearchResults","postCount","length","getPostId","id","find","post","toString","savePost","newPost","helper","getState","response","data","err","console","log","message","deletePost","delete","postsList","filter","editPost","updatePost","put","map","setEditTitle"],"sources":["C:/Users/Jsala/Záloha/Osobní/Jirka/WeboveAplikace/Kurzy/Javascript/Kurz-jsReact/projekt-3/src/Store.js"],"sourcesContent":["import { createStore, action, thunk, computed } from \"easy-peasy\";\r\nimport api from './api/posts';\r\n\r\nexport default\r\n    createStore({\r\n        posts: [],\r\n        setPosts: action((state, payload) => {\r\n            state.posts = payload;\r\n        }),\r\n\r\n        postTitle: [],\r\n        setPostTitle: action((state, payload) => {\r\n            state.postTitle = payload;\r\n        }),\r\n\r\n        postBody: [],\r\n        setPostBody: action((state, payload) => {\r\n            state.postBody = payload;\r\n        }),\r\n\r\n        editBody: [],\r\n        setEditBody: action((state, payload) => {\r\n            state.editBody = payload;\r\n        }),\r\n\r\n        search: '',\r\n        setSearch: action((state, payload) => {\r\n            state.search = payload;\r\n        }),\r\n\r\n        searchResults: [],\r\n        setSearchResults: action((state, payload) => {\r\n            state.searchResults = payload;\r\n        }),\r\n\r\n        postCount: computed((state) => state.posts.length),\r\n        getPostId: computed((state) => {\r\n            return (id) => state.posts.find(post => (post.id).toString() === id);\r\n        }),\r\n\r\n        savePost: thunk(async (action, newPost, helper) => {\r\n            const { posts } = helper.getState();\r\n            try {\r\n                const response = await api.post(`/posts/`, newPost);\r\n                action.setPosts([...posts, response.data]);\r\n                action.setPostTitle(\"\");\r\n                action.setPostBody(\"\");\r\n            } catch (err) {\r\n                console.log(`Error:${err.message}`);\r\n            }\r\n        }),\r\n\r\n        deletePost: thunk(async (action, id, helper) => {\r\n            const { posts } = helper.getState();\r\n            try {\r\n                await api.delete(`/posts/${id}`);\r\n                const postsList = posts.filter(post => post.id !== id);\r\n                action.setPosts(postsList);\r\n            } catch (err) {\r\n                console.log(`Error:${err.message}`);\r\n            }\r\n        }),\r\n\r\n        editPost: thunk(async (action, updatePost, helper) => {\r\n            const { posts } = helper.getState;\r\n            const { id } = updatePost;\r\n            try {\r\n                const response = await api.put(`/posts/${id}`, updatePost);\r\n                action.setPosts(posts.map((post) => post.id === id ? { ...response.data } : post));\r\n                action.setEditTitle('');\r\n                action.setEditBody('');\r\n\r\n            } catch (err) {\r\n                console.log(`Error:${err.message}`);\r\n            }\r\n        })\r\n\r\n    });\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}