{"ast":null,"code":"import{BrowserRouter as Router,Route,Routes}from'react-router-dom';//import {DataProvider} from \"./context/DataContext\";\nimport Header from\"./Header\";import Nav from\"./Nav\";import Footer from\"./Footer\";import Home from\"./Home\";import NewPost from\"./NewPost\";import PostPage from\"./PostPage\";import EditPost from'./EditPost';import About from\"./About\";import Missing from\"./Missing\";/*import { format } from 'date-fns';\r\nimport api from \"./api/posts\";\r\nimport useWindowSize from './hooks/useWindowSize';*/import{useEffect}from\"react\";import useAxiosFetch from'./hooks/useAxiosFetch';import{useStoreActions}from'easy-peasy';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){/* const [posts, setPosts] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [postTitle, setPostTitle] = useState('');\r\n  const [postBody, setPostBody] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [editBody, setEditBody] = useState('');\r\n  const { width } = useWindowSize();\r\n  const { data, fetchError, isLoading } = useAxiosFetch(\"http://localhost:3001/posts\");\r\n\r\n\r\n  useEffect(() => {\r\n    setPosts(data);\r\n    console.log(data);\r\n  }, [data]);\r\n\r\n\r\n  useEffect(() => {\r\n    const filterResult = posts.filter((post) => (\r\n      ((post.body).toLowerCase()).includes(search.toLowerCase()) ||\r\n      ((post.title).toLowerCase()).includes(search.toLowerCase())\r\n    ))\r\n    setSearchResults(filterResult.reverse());\r\n  }, [posts, search])\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    const id = posts.length ? (posts[posts.length - 1].id + 1) : 1;\r\n    const datetime = format(new Date(), 'MMMM dd , yyyy pp');\r\n    const newPost = { id, title: postTitle, datetime, body: postBody };\r\n    try {\r\n      const response = await api.post(`/posts/`, newPost);\r\n      const allPosts = [...posts, response.data];\r\n      setPosts(allPosts);\r\n      setPostTitle(\"\");\r\n      setPostBody(\"\");\r\n    } catch (err) {\r\n      console.log(`Erroe:${err.message}`);\r\n    }\r\n  };\r\n  const handleEdit = async (id) => {\r\n    const datetime = format(new Date(), 'MMMM dd , yyyy pp');\r\n    const updatePost = { id, title: editTitle, datetime, body: editBody };\r\n    try {\r\n      const response = await api.put(`/posts/${id}`, updatePost);\r\n      setPosts(posts.map((post) => post.id === id ? { ...response.data } : post));\r\n      setEditTitle('');\r\n      setEditBody('');\r\n\r\n    } catch (err) {\r\n      console.log(`Erroe:${err.message}`);\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await api.delete(`/posts/${id}`);\r\n      const postsList = posts.filter(post => post.id !== id);\r\n      setPosts(postsList);\r\n    } catch (err) {\r\n      console.log(`Erroe:${err.message}`);\r\n    }\r\n  };*/var setPosts=useStoreActions(function(actions){return actions.setPosts;});var _useAxiosFetch=useAxiosFetch(\"http://localhost:3001/posts\"),data=_useAxiosFetch.data,fetchError=_useAxiosFetch.fetchError,isLoading=_useAxiosFetch.isLoading;useEffect(function(){setPosts(data);},[data,setPosts]);return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{title:\"React JS Blog-v\\xFDukov\\xFD\"/*width={width} */}),/*#__PURE__*/_jsx(Nav/*search={search}\r\n            setSearch={setSearch}*/,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home/*posts={searchResults}*/,{fetchError:fetchError,isLoading:isLoading})}),/*#__PURE__*/_jsx(Route,{path:\"/post\",element:/*#__PURE__*/_jsx(NewPost/*handleSubmit={handleSubmit}\r\n              postTitle={postTitle}\r\n              setPostTitle={setPostTitle}\r\n              postBody={postBody}\r\n              setPostBody={setPostBody}*/,{})}),/*#__PURE__*/_jsx(Route,{path:\"/edit/:id\",element:/*#__PURE__*/_jsx(EditPost/*posts={posts}\r\n              handleEdit={handleEdit}\r\n              editTitle={editTitle}\r\n              setEditTitle={setEditTitle}\r\n              editBody={editBody}\r\n              setEditBody={setEditBody}*/,{})}),/*#__PURE__*/_jsx(Route,{path:\"/post/:id\",element:/*#__PURE__*/_jsx(PostPage/* posts={posts} \r\n            setPosts={setPosts} \r\n            handleDelete={handleDelete} */,{})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{path:\"/*\",element:/*#__PURE__*/_jsx(Missing,{})})]}),/*#__PURE__*/_jsx(Footer,{})]})});}export default App;","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","Header","Nav","Footer","Home","NewPost","PostPage","EditPost","About","Missing","useEffect","useAxiosFetch","useStoreActions","jsx","_jsx","jsxs","_jsxs","App","setPosts","actions","_useAxiosFetch","data","fetchError","isLoading","children","className","title","path","element"],"sources":["C:/Users/Jsala/Záloha/Osobní/Jirka/WeboveAplikace/Kurzy/Javascript/Kurz-jsReact/project-3a/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\n//import {DataProvider} from \"./context/DataContext\";\r\n\r\nimport Header from \"./Header\";\r\nimport Nav from \"./Nav\";\r\nimport Footer from \"./Footer\";\r\nimport Home from \"./Home\";\r\nimport NewPost from \"./NewPost\";\r\nimport PostPage from \"./PostPage\";\r\nimport EditPost from './EditPost';\r\nimport About from \"./About\";\r\nimport Missing from \"./Missing\";\r\n\r\n\r\n/*import { format } from 'date-fns';\r\nimport api from \"./api/posts\";\r\nimport useWindowSize from './hooks/useWindowSize';*/\r\nimport { useEffect } from \"react\";\r\nimport useAxiosFetch from './hooks/useAxiosFetch';\r\nimport { useStoreActions } from 'easy-peasy';\r\n\r\n\r\nfunction App() {\r\n /* const [posts, setPosts] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [postTitle, setPostTitle] = useState('');\r\n  const [postBody, setPostBody] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [editBody, setEditBody] = useState('');\r\n  const { width } = useWindowSize();\r\n  const { data, fetchError, isLoading } = useAxiosFetch(\"http://localhost:3001/posts\");\r\n\r\n\r\n  useEffect(() => {\r\n    setPosts(data);\r\n    console.log(data);\r\n  }, [data]);\r\n\r\n\r\n  useEffect(() => {\r\n    const filterResult = posts.filter((post) => (\r\n      ((post.body).toLowerCase()).includes(search.toLowerCase()) ||\r\n      ((post.title).toLowerCase()).includes(search.toLowerCase())\r\n    ))\r\n    setSearchResults(filterResult.reverse());\r\n  }, [posts, search])\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    const id = posts.length ? (posts[posts.length - 1].id + 1) : 1;\r\n    const datetime = format(new Date(), 'MMMM dd , yyyy pp');\r\n    const newPost = { id, title: postTitle, datetime, body: postBody };\r\n    try {\r\n      const response = await api.post(`/posts/`, newPost);\r\n      const allPosts = [...posts, response.data];\r\n      setPosts(allPosts);\r\n      setPostTitle(\"\");\r\n      setPostBody(\"\");\r\n    } catch (err) {\r\n      console.log(`Erroe:${err.message}`);\r\n    }\r\n  };\r\n  const handleEdit = async (id) => {\r\n    const datetime = format(new Date(), 'MMMM dd , yyyy pp');\r\n    const updatePost = { id, title: editTitle, datetime, body: editBody };\r\n    try {\r\n      const response = await api.put(`/posts/${id}`, updatePost);\r\n      setPosts(posts.map((post) => post.id === id ? { ...response.data } : post));\r\n      setEditTitle('');\r\n      setEditBody('');\r\n\r\n    } catch (err) {\r\n      console.log(`Erroe:${err.message}`);\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await api.delete(`/posts/${id}`);\r\n      const postsList = posts.filter(post => post.id !== id);\r\n      setPosts(postsList);\r\n    } catch (err) {\r\n      console.log(`Erroe:${err.message}`);\r\n    }\r\n  };*/\r\n\r\nconst setPosts=useStoreActions((actions)=>actions.setPosts);\r\n\r\n\r\n  const { data, fetchError, isLoading } = useAxiosFetch(\"http://localhost:3001/posts\");\r\n\r\n  useEffect(() => {\r\n      setPosts(data);\r\n  }, [data, setPosts]);\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header \r\n            title=\"React JS Blog-výukový\"\r\n            /*width={width} */\r\n        />\r\n        \r\n\r\n          <Nav\r\n            /*search={search}\r\n            setSearch={setSearch}*/\r\n          />\r\n          <Routes>\r\n            <Route path='/' element={<Home\r\n              /*posts={searchResults}*/\r\n              fetchError={fetchError}\r\n              isLoading={isLoading}\r\n            />} />\r\n            <Route path='/post' element={<NewPost\r\n              /*handleSubmit={handleSubmit}\r\n              postTitle={postTitle}\r\n              setPostTitle={setPostTitle}\r\n              postBody={postBody}\r\n              setPostBody={setPostBody}*/\r\n            />} />\r\n            <Route path='/edit/:id' element={<EditPost\r\n              /*posts={posts}\r\n              handleEdit={handleEdit}\r\n              editTitle={editTitle}\r\n              setEditTitle={setEditTitle}\r\n              editBody={editBody}\r\n              setEditBody={setEditBody}*/\r\n            />} />\r\n            <Route path='/post/:id' element={<PostPage \r\n           /* posts={posts} \r\n            setPosts={setPosts} \r\n            handleDelete={handleDelete} */\r\n            />} />\r\n            <Route path='/about' element={<About />} />\r\n            <Route path='/*' element={<Missing />} />\r\n          </Routes>\r\n          <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}