{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jsala\\\\Z\\xE1loha\\\\Osobn\\xED\\\\Jirka\\\\WeboveAplikace\\\\Kurzy\\\\Javascript\\\\Kurz-jsReact\\\\project-3a\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n//import {DataProvider} from \"./context/DataContext\";\n\nimport Header from \"./Header\";\nimport Nav from \"./Nav\";\nimport Footer from \"./Footer\";\nimport Home from \"./Home\";\nimport NewPost from \"./NewPost\";\nimport PostPage from \"./PostPage\";\nimport EditPost from './EditPost';\nimport About from \"./About\";\nimport Missing from \"./Missing\";\n\n/*import { format } from 'date-fns';\r\nimport api from \"./api/posts\";\r\nimport useWindowSize from './hooks/useWindowSize';*/\nimport { useEffect } from \"react\";\nimport useAxiosFetch from './hooks/useAxiosFetch';\nimport { useStoreActions } from 'easy-peasy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /* const [posts, setPosts] = useState([]);\r\n   const [search, setSearch] = useState('');\r\n   const [postTitle, setPostTitle] = useState('');\r\n   const [postBody, setPostBody] = useState('');\r\n   const [searchResults, setSearchResults] = useState([]);\r\n   const [editTitle, setEditTitle] = useState('');\r\n   const [editBody, setEditBody] = useState('');\r\n   const { width } = useWindowSize();\r\n   const { data, fetchError, isLoading } = useAxiosFetch(\"http://localhost:3001/posts\");\r\n  \n  \n   useEffect(() => {\r\n     setPosts(data);\r\n     console.log(data);\r\n   }, [data]);\r\n  \n  \n   useEffect(() => {\r\n     const filterResult = posts.filter((post) => (\r\n       ((post.body).toLowerCase()).includes(search.toLowerCase()) ||\r\n       ((post.title).toLowerCase()).includes(search.toLowerCase())\r\n     ))\r\n     setSearchResults(filterResult.reverse());\r\n   }, [posts, search])\r\n  \n  \n   const handleSubmit = async () => {\r\n     const id = posts.length ? (posts[posts.length - 1].id + 1) : 1;\r\n     const datetime = format(new Date(), 'MMMM dd , yyyy pp');\r\n     const newPost = { id, title: postTitle, datetime, body: postBody };\r\n     try {\r\n       const response = await api.post(`/posts/`, newPost);\r\n       const allPosts = [...posts, response.data];\r\n       setPosts(allPosts);\r\n       setPostTitle(\"\");\r\n       setPostBody(\"\");\r\n     } catch (err) {\r\n       console.log(`Erroe:${err.message}`);\r\n     }\r\n   };\r\n   const handleEdit = async (id) => {\r\n     const datetime = format(new Date(), 'MMMM dd , yyyy pp');\r\n     const updatePost = { id, title: editTitle, datetime, body: editBody };\r\n     try {\r\n       const response = await api.put(`/posts/${id}`, updatePost);\r\n       setPosts(posts.map((post) => post.id === id ? { ...response.data } : post));\r\n       setEditTitle('');\r\n       setEditBody('');\r\n  \n     } catch (err) {\r\n       console.log(`Erroe:${err.message}`);\r\n     }\r\n   }\r\n  \n   const handleDelete = async (id) => {\r\n     try {\r\n       await api.delete(`/posts/${id}`);\r\n       const postsList = posts.filter(post => post.id !== id);\r\n       setPosts(postsList);\r\n     } catch (err) {\r\n       console.log(`Erroe:${err.message}`);\r\n     }\r\n   };*/\n\n  const setPosts = useStoreActions(actions => actions.setPosts);\n  const {\n    data,\n    fetchError,\n    isLoading\n  } = useAxiosFetch(\"http://localhost:3001/posts\");\n  useEffect(() => {\n    setPosts(data);\n  }, [data, setPosts]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"React JS Blog-v\\xFDukov\\xFD\"\n        /*width={width} */\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Nav\n      /*search={search}\r\n      setSearch={setSearch}*/, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home\n          /*posts={searchResults}*/, {\n            fetchError: fetchError,\n            isLoading: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/post\",\n          element: /*#__PURE__*/_jsxDEV(NewPost\n          /*handleSubmit={handleSubmit}\r\n          postTitle={postTitle}\r\n          setPostTitle={setPostTitle}\r\n          postBody={postBody}\r\n          setPostBody={setPostBody}*/, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit/:id\",\n          element: /*#__PURE__*/_jsxDEV(EditPost\n          /*posts={posts}\r\n          handleEdit={handleEdit}\r\n          editTitle={editTitle}\r\n          setEditTitle={setEditTitle}\r\n          editBody={editBody}\r\n          setEditBody={setEditBody}*/, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/post/:id\",\n          element: /*#__PURE__*/_jsxDEV(PostPage\n          /* posts={posts} \r\n           setPosts={setPosts} \r\n           handleDelete={handleDelete} */, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/*\",\n          element: /*#__PURE__*/_jsxDEV(Missing, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ixAVGe18y0OtNcQqzihyxHilKkw=\", false, function () {\n  return [useStoreActions, useAxiosFetch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","Header","Nav","Footer","Home","NewPost","PostPage","EditPost","About","Missing","useEffect","useAxiosFetch","useStoreActions","jsxDEV","_jsxDEV","App","_s","setPosts","actions","data","fetchError","isLoading","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Jsala/Záloha/Osobní/Jirka/WeboveAplikace/Kurzy/Javascript/Kurz-jsReact/project-3a/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\n//import {DataProvider} from \"./context/DataContext\";\r\n\r\nimport Header from \"./Header\";\r\nimport Nav from \"./Nav\";\r\nimport Footer from \"./Footer\";\r\nimport Home from \"./Home\";\r\nimport NewPost from \"./NewPost\";\r\nimport PostPage from \"./PostPage\";\r\nimport EditPost from './EditPost';\r\nimport About from \"./About\";\r\nimport Missing from \"./Missing\";\r\n\r\n\r\n/*import { format } from 'date-fns';\r\nimport api from \"./api/posts\";\r\nimport useWindowSize from './hooks/useWindowSize';*/\r\nimport { useEffect } from \"react\";\r\nimport useAxiosFetch from './hooks/useAxiosFetch';\r\nimport { useStoreActions } from 'easy-peasy';\r\n\r\n\r\nfunction App() {\r\n /* const [posts, setPosts] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [postTitle, setPostTitle] = useState('');\r\n  const [postBody, setPostBody] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [editBody, setEditBody] = useState('');\r\n  const { width } = useWindowSize();\r\n  const { data, fetchError, isLoading } = useAxiosFetch(\"http://localhost:3001/posts\");\r\n\r\n\r\n  useEffect(() => {\r\n    setPosts(data);\r\n    console.log(data);\r\n  }, [data]);\r\n\r\n\r\n  useEffect(() => {\r\n    const filterResult = posts.filter((post) => (\r\n      ((post.body).toLowerCase()).includes(search.toLowerCase()) ||\r\n      ((post.title).toLowerCase()).includes(search.toLowerCase())\r\n    ))\r\n    setSearchResults(filterResult.reverse());\r\n  }, [posts, search])\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    const id = posts.length ? (posts[posts.length - 1].id + 1) : 1;\r\n    const datetime = format(new Date(), 'MMMM dd , yyyy pp');\r\n    const newPost = { id, title: postTitle, datetime, body: postBody };\r\n    try {\r\n      const response = await api.post(`/posts/`, newPost);\r\n      const allPosts = [...posts, response.data];\r\n      setPosts(allPosts);\r\n      setPostTitle(\"\");\r\n      setPostBody(\"\");\r\n    } catch (err) {\r\n      console.log(`Erroe:${err.message}`);\r\n    }\r\n  };\r\n  const handleEdit = async (id) => {\r\n    const datetime = format(new Date(), 'MMMM dd , yyyy pp');\r\n    const updatePost = { id, title: editTitle, datetime, body: editBody };\r\n    try {\r\n      const response = await api.put(`/posts/${id}`, updatePost);\r\n      setPosts(posts.map((post) => post.id === id ? { ...response.data } : post));\r\n      setEditTitle('');\r\n      setEditBody('');\r\n\r\n    } catch (err) {\r\n      console.log(`Erroe:${err.message}`);\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await api.delete(`/posts/${id}`);\r\n      const postsList = posts.filter(post => post.id !== id);\r\n      setPosts(postsList);\r\n    } catch (err) {\r\n      console.log(`Erroe:${err.message}`);\r\n    }\r\n  };*/\r\n\r\nconst setPosts=useStoreActions((actions)=>actions.setPosts);\r\n\r\n\r\n  const { data, fetchError, isLoading } = useAxiosFetch(\"http://localhost:3001/posts\");\r\n\r\n  useEffect(() => {\r\n      setPosts(data);\r\n  }, [data, setPosts]);\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header \r\n            title=\"React JS Blog-výukový\"\r\n            /*width={width} */\r\n        />\r\n        \r\n\r\n          <Nav\r\n            /*search={search}\r\n            setSearch={setSearch}*/\r\n          />\r\n          <Routes>\r\n            <Route path='/' element={<Home\r\n              /*posts={searchResults}*/\r\n              fetchError={fetchError}\r\n              isLoading={isLoading}\r\n            />} />\r\n            <Route path='/post' element={<NewPost\r\n              /*handleSubmit={handleSubmit}\r\n              postTitle={postTitle}\r\n              setPostTitle={setPostTitle}\r\n              postBody={postBody}\r\n              setPostBody={setPostBody}*/\r\n            />} />\r\n            <Route path='/edit/:id' element={<EditPost\r\n              /*posts={posts}\r\n              handleEdit={handleEdit}\r\n              editTitle={editTitle}\r\n              setEditTitle={setEditTitle}\r\n              editBody={editBody}\r\n              setEditBody={setEditBody}*/\r\n            />} />\r\n            <Route path='/post/:id' element={<PostPage \r\n           /* posts={posts} \r\n            setPosts={setPosts} \r\n            handleDelete={handleDelete} */\r\n            />} />\r\n            <Route path='/about' element={<About />} />\r\n            <Route path='/*' element={<Missing />} />\r\n          </Routes>\r\n          <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}