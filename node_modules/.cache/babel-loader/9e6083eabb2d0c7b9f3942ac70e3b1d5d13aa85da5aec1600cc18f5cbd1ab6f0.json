{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jsala\\\\Z\\xE1loha\\\\Osobn\\xED\\\\Jirka\\\\WeboveAplikace\\\\Kurzy\\\\Javascript\\\\Kurz-jsReact\\\\projekt-3\\\\src\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { /*useContext,*/useEffect /*, useState */ } from \"react\";\n/*import DataContext from \"./context/DataContext\";*/\nimport { format } from 'date-fns';\n/*import api from \"./api/posts\";*/\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditPost = ( /*{\r\n                   posts, handleEdit, editBody, setEditBody, editTitle, setEditTitle\r\n                   }*/\n) => {\n  _s();\n  /*const {posts, setPosts}=useContext(DataContext);*/\n  const navigace = useNavigate();\n  const {\n    id\n  } = useParams();\n  const posts = useStoreState(state => state.posts);\n  const setPosts = useStoreActions(actions => actions.setPosts);\n  const editTitle = useStoreState(state => state.editTitle);\n  const setEditTitle = useStoreActions(actions => actions.setEditTitle);\n  const editBody = useStoreState(state => state.editBody);\n  const setEditBody = useStoreActions(actions => actions.setEditBody);\n  const getPostId = useStoreState(actions => actions.getPostId);\n  const post = getPostId(id);\n  const editPost = useStoreActions(actions => actions.editPost);\n  /*const post = posts.find((post) => (post.id).toString() === id);*/\n  /*const [editTitle, setEditTitle] = useState('');\r\n  const [editBody, setEditBody] = useState('');*/\n\n  useEffect(() => {\n    if (post) {\n      setEditBody(post.body);\n      setEditTitle(post.title);\n    }\n  }, [post, setEditBody, setEditTitle]);\n  const handleEdit = id => {\n    const datetime = format(new Date(), 'MMMM dd , yyyy pp');\n    const updatePost = {\n      id,\n      title: editTitle,\n      datetime,\n      body: editBody\n    };\n    editPost(updatePost);\n    /*try {\r\n        const response = await api.put(`/posts/${id}`, updatePost);\r\n        setPosts(posts.map((post) => post.id === id ? { ...response.data } : post));\r\n        setEditTitle('');\r\n        setEditBody('');\r\n      } catch (err) {\r\n        console.log(`Error:${err.message}`);\r\n    }*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: [editTitle && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"newPostForm\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: editTitle,\n          onChange: e => setEditTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postBody\",\n          children: \"Body:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postBody\",\n          required: true,\n          value: editBody,\n          onChange: e => setEditBody(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => {\n            handleEdit(post.id);\n            navigace(\"/\");\n          },\n          children: \" Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), !editTitle && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Page Not Fount.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Well, that's disappointing.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Visit Our Homepage.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPost, \"UgnRn2PjaeqZpJDx7rciZ6oXfgo=\", false, function () {\n  return [useNavigate, useParams, useStoreState, useStoreActions, useStoreState, useStoreActions, useStoreState, useStoreActions, useStoreState, useStoreActions];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["useParams","Link","useNavigate","useEffect","format","useStoreActions","useStoreState","jsxDEV","_jsxDEV","Fragment","_Fragment","EditPost","_s","navigace","id","posts","state","setPosts","actions","editTitle","setEditTitle","editBody","setEditBody","getPostId","post","editPost","body","title","handleEdit","datetime","Date","updatePost","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","htmlFor","type","required","value","onChange","target","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/Jsala/Záloha/Osobní/Jirka/WeboveAplikace/Kurzy/Javascript/Kurz-jsReact/projekt-3/src/EditPost.js"],"sourcesContent":["import { useParams, Link, useNavigate } from \"react-router-dom\";\r\nimport { /*useContext,*/ useEffect /*, useState */} from \"react\";\r\n/*import DataContext from \"./context/DataContext\";*/\r\nimport { format } from 'date-fns';\r\n/*import api from \"./api/posts\";*/\r\nimport { useStoreActions,useStoreState } from \"easy-peasy\";\r\n\r\nconst EditPost = (/*{\r\n    posts, handleEdit, editBody, setEditBody, editTitle, setEditTitle\r\n}*/) => {\r\n    /*const {posts, setPosts}=useContext(DataContext);*/\r\n    const navigace = useNavigate();\r\n    const { id } = useParams();\r\n    const posts=useStoreState((state)=>state.posts);\r\n    const setPosts=useStoreActions((actions)=>actions.setPosts);\r\n    const editTitle=useStoreState((state)=>state.editTitle);\r\n    const setEditTitle=useStoreActions((actions)=>actions.setEditTitle);\r\n    const editBody=useStoreState((state)=>state.editBody);\r\n    const setEditBody=useStoreActions((actions)=>actions.setEditBody);\r\n    const getPostId=useStoreState((actions)=>actions.getPostId);\r\n    const post=getPostId(id);\r\n    const editPost=useStoreActions((actions)=>actions.editPost);\r\n    /*const post = posts.find((post) => (post.id).toString() === id);*/\r\n    /*const [editTitle, setEditTitle] = useState('');\r\n    const [editBody, setEditBody] = useState('');*/\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n            setEditBody(post.body);\r\n            setEditTitle(post.title);\r\n        }\r\n    }, [post, setEditBody, setEditTitle])\r\n\r\n\r\n    const handleEdit = (id) => {\r\n        const datetime = format(new Date(), 'MMMM dd , yyyy pp');\r\n        const updatePost = { id, title: editTitle, datetime, body: editBody };\r\n        editPost(updatePost);\r\n        /*try {\r\n            const response = await api.put(`/posts/${id}`, updatePost);\r\n            setPosts(posts.map((post) => post.id === id ? { ...response.data } : post));\r\n            setEditTitle('');\r\n            setEditBody('');\r\n\r\n        } catch (err) {\r\n            console.log(`Error:${err.message}`);\r\n        }*/\r\n    }\r\n    return (\r\n        <main className=\"NewPost\">\r\n            {editTitle &&\r\n                <>\r\n                    <h2>New Post</h2>\r\n                    <form className=\"newPostForm\" onSubmit={(e) => e.preventDefault()}>\r\n                        <label htmlFor=\"postTitle\">Title:</label>\r\n                        <input\r\n                            id=\"postTitle\"\r\n                            type=\"text\"\r\n                            required\r\n                            value={editTitle}\r\n                            onChange={(e) => setEditTitle(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"postBody\">Body:</label>\r\n                        <textarea\r\n                            id=\"postBody\"\r\n                            required\r\n                            value={editBody}\r\n                            onChange={(e) => setEditBody(e.target.value)}\r\n                        />\r\n                        <button type=\"submit\" onClick={() => { handleEdit(post.id); navigace(\"/\"); }}> Submit</button>\r\n                    </form>\r\n                </>\r\n            }\r\n            {!editTitle &&\r\n                <>\r\n                    <h2>Page Not Fount.</h2>\r\n                    <p>Well, that's disappointing.</p>\r\n                    <p>\r\n                        <Link to=\"/\">Visit Our Homepage.</Link>\r\n                    </p>\r\n                </>\r\n            }\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default EditPost\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAC/D,SAAS,eAAgBC,SAAS,CAAC,uBAAsB,OAAO;AAChE;AACA,SAASC,MAAM,QAAQ,UAAU;AACjC;AACA,SAASC,eAAe,EAACC,aAAa,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3D,MAAMC,QAAQ,GAAGA,CAAA,CAAC;AAClB;AACA;AAFkB,KAEV;EAAAC,EAAA;EACJ;EACA,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY;EAAG,CAAC,GAAGd,SAAS,CAAC,CAAC;EAC1B,MAAMe,KAAK,GAACT,aAAa,CAAEU,KAAK,IAAGA,KAAK,CAACD,KAAK,CAAC;EAC/C,MAAME,QAAQ,GAACZ,eAAe,CAAEa,OAAO,IAAGA,OAAO,CAACD,QAAQ,CAAC;EAC3D,MAAME,SAAS,GAACb,aAAa,CAAEU,KAAK,IAAGA,KAAK,CAACG,SAAS,CAAC;EACvD,MAAMC,YAAY,GAACf,eAAe,CAAEa,OAAO,IAAGA,OAAO,CAACE,YAAY,CAAC;EACnE,MAAMC,QAAQ,GAACf,aAAa,CAAEU,KAAK,IAAGA,KAAK,CAACK,QAAQ,CAAC;EACrD,MAAMC,WAAW,GAACjB,eAAe,CAAEa,OAAO,IAAGA,OAAO,CAACI,WAAW,CAAC;EACjE,MAAMC,SAAS,GAACjB,aAAa,CAAEY,OAAO,IAAGA,OAAO,CAACK,SAAS,CAAC;EAC3D,MAAMC,IAAI,GAACD,SAAS,CAACT,EAAE,CAAC;EACxB,MAAMW,QAAQ,GAACpB,eAAe,CAAEa,OAAO,IAAGA,OAAO,CAACO,QAAQ,CAAC;EAC3D;EACA;AACJ;;EAEItB,SAAS,CAAC,MAAM;IACZ,IAAIqB,IAAI,EAAE;MACNF,WAAW,CAACE,IAAI,CAACE,IAAI,CAAC;MACtBN,YAAY,CAACI,IAAI,CAACG,KAAK,CAAC;IAC5B;EACJ,CAAC,EAAE,CAACH,IAAI,EAAEF,WAAW,EAAEF,YAAY,CAAC,CAAC;EAGrC,MAAMQ,UAAU,GAAId,EAAE,IAAK;IACvB,MAAMe,QAAQ,GAAGzB,MAAM,CAAC,IAAI0B,IAAI,CAAC,CAAC,EAAE,mBAAmB,CAAC;IACxD,MAAMC,UAAU,GAAG;MAAEjB,EAAE;MAAEa,KAAK,EAAER,SAAS;MAAEU,QAAQ;MAAEH,IAAI,EAAEL;IAAS,CAAC;IACrEI,QAAQ,CAACM,UAAU,CAAC;IACpB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;EAEI,CAAC;;EACD,oBACIvB,OAAA;IAAMwB,SAAS,EAAC,SAAS;IAAAC,QAAA,GACpBd,SAAS,iBACNX,OAAA,CAAAE,SAAA;MAAAuB,QAAA,gBACIzB,OAAA;QAAAyB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjB7B,OAAA;QAAMwB,SAAS,EAAC,aAAa;QAACM,QAAQ,EAAGC,CAAC,IAAKA,CAAC,CAACC,cAAc,CAAC,CAAE;QAAAP,QAAA,gBAC9DzB,OAAA;UAAOiC,OAAO,EAAC,WAAW;UAAAR,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzC7B,OAAA;UACIM,EAAE,EAAC,WAAW;UACd4B,IAAI,EAAC,MAAM;UACXC,QAAQ;UACRC,KAAK,EAAEzB,SAAU;UACjB0B,QAAQ,EAAGN,CAAC,IAAKnB,YAAY,CAACmB,CAAC,CAACO,MAAM,CAACF,KAAK;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACF7B,OAAA;UAAOiC,OAAO,EAAC,UAAU;UAAAR,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvC7B,OAAA;UACIM,EAAE,EAAC,UAAU;UACb6B,QAAQ;UACRC,KAAK,EAAEvB,QAAS;UAChBwB,QAAQ,EAAGN,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACO,MAAM,CAACF,KAAK;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACF7B,OAAA;UAAQkC,IAAI,EAAC,QAAQ;UAACK,OAAO,EAAEA,CAAA,KAAM;YAAEnB,UAAU,CAACJ,IAAI,CAACV,EAAE,CAAC;YAAED,QAAQ,CAAC,GAAG,CAAC;UAAE,CAAE;UAAAoB,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5F,CAAC;IAAA,eACT,CAAC,EAEN,CAAClB,SAAS,iBACPX,OAAA,CAAAE,SAAA;MAAAuB,QAAA,gBACIzB,OAAA;QAAAyB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB7B,OAAA;QAAAyB,QAAA,EAAG;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClC7B,OAAA;QAAAyB,QAAA,eACIzB,OAAA,CAACP,IAAI;UAAC+C,EAAE,EAAC,GAAG;UAAAf,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA,eACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEf,CAAC;AAAAzB,EAAA,CA7EKD,QAAQ;EAAA,QAIOT,WAAW,EACbF,SAAS,EACZM,aAAa,EACVD,eAAe,EACdC,aAAa,EACVD,eAAe,EACnBC,aAAa,EACVD,eAAe,EACjBC,aAAa,EAEdD,eAAe;AAAA;AAAA4C,EAAA,GAd5BtC,QAAQ;AA+Ed,eAAeA,QAAQ;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}